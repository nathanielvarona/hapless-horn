version: "3.7"

volumes:
  mysql:
  redis:
  vendor:
  node_modules:

services:
  nginx:
    image: nginx:stable
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - vendor:/var/www/vendor
      - node_modules:/var/www/node_modules
    depends_on:
      - php

  php:
    build:
      context: .
      dockerfile:  docker-compose.php-fpm.Dockerfile
    volumes:
      - ./src:/var/www
      - vendor:/var/www/vendor
      - node_modules:/var/www/node_modules
    ports:
      - "9000:9000"
    depends_on:
      - mysql
      - redis

  node:
    build:
      context: .
      dockerfile:  docker-compose.node-12.Dockerfile
    volumes:
      - ./src:/var/www
      - node_modules:/var/www/node_modules
    command: npm run watch-poll

  # php-apache:
  #   build:
  #     context: .
  #     dockerfile:  docker-compose.php-apache.Dockerfile
  #   volumes:
  #     - ./src:/var/www
  #     - vendor:/var/www/vendor
  #   ports:
  #     - "8080:80"

  mysql:
    image: mysql:8
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=mysqluserdb
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqluserpass
      - MYSQL_ROOT_PASSWORD=mysqlrootpass
    volumes:
      - mysql:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:5
    ports:
        - '6379:6379'
    volumes:
      - redis:/data
    entrypoint: redis-server --requirepass redispass --appendonly yes
